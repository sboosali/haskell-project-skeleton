--------------------------------------------------
--------------------------------------------------

{-|



-}

module Test.Unit.__MODULE__ where

--------------------------------------------------

import __MODULE__
--import Internal.__MODULE__

--------------------------------------------------

import qualified "HUnit" Test.HUnit as Test
import           "HUnit" Test.HUnit         ((~:), (~=?), (@?))

--------------------------------------------------

-- import qualified "" _ as _

--------------------------------------------------

import Prelude___PACKAGE_UNDERSCORES__

--------------------------------------------------
--------------------------------------------------

{-| 

-}

tests = test
  [ "test1" ~: test1
  , "test2" ~: test2
  ]

--------------------------------------------------

test1 = "(foo 3)" ~: (1,2) ~=? (foo 3)

test2 = do
  (x, y) <- partA 3
  assertEqual "for the first result of partA," 5 x
  partB y @? "(partB " ++ show y ++ ") failed"

--------------------------------------------------
--------------------------------------------------
{- NOTES



-}
--------------------------------------------------