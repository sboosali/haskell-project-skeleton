

























--------------------------------------------------
--------------------------------------------------

{-|

-}

module Test.Unit.Xxx_Module_xxX

  ( tests
  ) where

--------------------------------------------------
--------------------------------------------------

import Xxx_Module_xxX
--import Internal.Xxx_Module_xxX

--------------------------------------------------

import Prelude_xxx_package_xxx

--------------------------------------------------
-- Imports ---------------------------------------
--------------------------------------------------

import qualified "tasty-hunit" Test.Tasty.HUnit as Test
import           "tasty-hunit" Test.Tasty.HUnit ((@=?), (@?))

--import           "HUnit" Test.HUnit ((~:), (~=?), (@?))

--------------------------------------------------

-- import qualified "" _ as _

--------------------------------------------------
-- Exports ---------------------------------------
--------------------------------------------------

{-| 

-}

tests :: [Test.Test]
tests = Test.test
  [ "test1 (symbolic)"     ~: test1_symbolic
  , "test1 (alphanumeric)" ~: test1_alphanumeric
--, "test2"                ~: test2
  ]

--------------------------------------------------
-- Tests -----------------------------------------
--------------------------------------------------

test1_symbolic :: Test.Test
test1_symbolic =

  "(foo 3)" ~: (1,2) @=? (foo 3)

  where
  foo x = (x - 2, x - 1)

--------------------------------------------------

test1_alphanumeric :: Test.Test
test1_alphanumeric = do

  Test.assertEqual "(foo 3)" (1,2) (foo 3)

  where
  foo x = (x - 2, x - 1)

--------------------------------------------------
--------------------------------------------------
{- NOTES

(@=?) ≡ assertEqual ""

(@?) ≡ flip assertBool

-}
--------------------------------------------------














