{-# LANGUAGE BinaryLiterals #-}

--------------------------------------------------
--------------------------------------------------

{-| 

-}

module Skeletor.Core.SHA.Types where

--------------------------------------------------
--------------------------------------------------

import qualified "bytestring" Data.ByteString as B
import           "bytestring" Data.ByteString (ByteString)

--------------------------------------------------
--------------------------------------------------

--import Prelude_location

--------------------------------------------------
--------------------------------------------------

{-| 

-}

newtype SHA = SHA
  { getSHA ::

      ByteString

  }
  deriving (Eq, Ord, Read)

--------------------------------------------------
--------------------------------------------------
