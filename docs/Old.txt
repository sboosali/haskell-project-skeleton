--------------------------------------------------

instance (NFData a) => NFData (Files a) where

--------------------------------------------------

deriving anyclass instance (Hashable a) => Hashable (Files a)

--------------------------------------------------

class NFData1 f where

A class of functors that can be fully evaluated.

Since: deepseq-1.4.3.0

liftRnf :: (a -> ()) -> f a -> ()

liftRnf should reduce its argument to normal form (that is, fully evaluate all sub-components), given an argument to reduce a arguments, and then return '()'.

--------------------------------------------------

instance NFData a => NFData [a] where rnf = rnf1

instance NFData1 [] where
    liftRnf r = go
      where
        go [] = ()
        go (x:xs) = r x `seq` go xs

--------------------------------------------------



--------------------------------------------------

instance NFData1 Files where

  liftRnf :: (a -> ()) -> (Files a -> ())
  liftRnf rnf' = go

    where
    go _ = _

--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------



--------------------------------------------------
